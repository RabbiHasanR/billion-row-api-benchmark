services:
  master_db:
    build:
      context: ./master_slave_replication/master
      dockerfile: Dockerfile
    container_name: master_db
    hostname: master_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./master_slave_replication/master/data:/var/lib/postgresql/data
    command: postgres -c config_file=/var/lib/postgresql/data/postgresql.conf
  
  slave_db:
    build:
      context: ./master_slave_replication/slave
      dockerfile: Dockerfile
    container_name: slave_db
    hostname: slave_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REPLICATOR_USER: ${REPLICATOR_USER}
      REPLICATOR_PASSWORD: ${REPLICATOR_PASSWORD}
      MASTER_HOST: master_db
    depends_on:
      - master_db
    volumes:
      - ./master_slave_replication/slave/data:/var/lib/postgresql/data

  
  pgbouncer_master:
    build:
      context: ./pgbouncer
      dockerfile: Dockerfile.pgbouncer_master
    container_name: pgbouncer_master
    hostname: pgbouncer_master
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # entrypoint: /etc/pgbouncer/generate_userlist.sh
    entrypoint: ["/bin/sh", "-c", "/usr/local/bin/generate_userlist.sh && pgbouncer /etc/pgbouncer/pgbouncer.ini"]
    volumes:
      - ./pgbouncer/pgbouncer_master.ini:/etc/pgbouncer/pgbouncer.ini
    depends_on:
      - master_db
      # - slave_db

  
  pgbouncer_slave:
    build:
      context: ./pgbouncer
      dockerfile: Dockerfile.pgbouncer_slave
    container_name: pgbouncer_slave
    hostname: pgbouncer_slave
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # entrypoint: /etc/pgbouncer/generate_userlist.sh
    entrypoint: ["/bin/sh", "-c", "/usr/local/bin/generate_userlist.sh && pgbouncer /etc/pgbouncer/pgbouncer.ini"]
    volumes:
      - ./pgbouncer/pgbouncer_slave.ini:/etc/pgbouncer/pgbouncer.ini
    depends_on:
      # - master_db
      - slave_db


  pgpool:
    build:
      context: ./pgpool
      dockerfile: Dockerfile
    container_name: pgpool
    hostname: pgpool
    environment:
      # You might pass PGPOOL-specific variables here if needed.
      PGPOOL_USER: ${POSTGRES_USER}
      PGPOOL_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./pgpool/pgpool.conf:/etc/pgpool-II/pgpool.conf
      - ./pgpool/pool_hba.conf:/etc/pgpool-II/pool_hba.conf
    # ports:
    #   - "9999:9999"  # Use your preferred Pgpool-II port
    depends_on:
      - pgbouncer_master
      - pgbouncer_slave

  
  redis:
    image: redis:7-alpine
    container_name: redis
    hostname: redis

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    hostname: api
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REPLICATOR_USER: ${REPLICATOR_USER}
      REPLICATOR_PASSWORD: ${REPLICATOR_PASSWORD}
      # MASTER_DB_HOST: master_db
      # MASTER_DB_PORT: 5432
      # MASTER_DB_HOST: pgbouncer
      # MASTER_DB_PORT: 6432
      MASTER_DB_HOST: pgpool
      MASTER_DB_PORT: 9999
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    entrypoint: /app/entrypoint.sh
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "5000:8000"
    depends_on:
      # - master_db
      # - slave_db
      # - pgbouncer
      - pgpool
      - redis
    volumes:
      - ./api:/app


  celery:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: celery
    hostname: celery
    command: celery -A main worker --loglevel=info
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REPLICATOR_USER: ${REPLICATOR_USER}
      REPLICATOR_PASSWORD: ${REPLICATOR_PASSWORD}
      # MASTER_DB_HOST: master_db
      # MASTER_DB_PORT: 5432
      # MASTER_DB_HOST: pgbouncer
      # MASTER_DB_PORT: 6432
      MASTER_DB_HOST: pgpool
      MASTER_DB_PORT: 9999
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - ./api:/app
    depends_on:
      - redis
      - api
      - pgpool
      # - master_db
      # - slave_db
      # - pgbouncer
  